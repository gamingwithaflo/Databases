CREATE TABLE IF NOT EXISTS human (
bsn INTEGER NOT NULL,
name VARCHAR NOT NULL,
birthdate DATE NOT NULL,
gender CHARACTER(1) NOT NULL
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS genre (
name VARCHAR NOT NULL
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS author (
author_id INTEGER NOT NULL,
alias VARCHAR,
is_active BOOLEAN DEFAULT FALSE
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS director (
director_id INTEGER NOT NULL,
description VARCHAR NOT NULL,
is_active BOOLEAN DEFAULT FALSE
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS consumer (
consumer_id INTEGER NOT NULL,
nickname VARCHAR NOT NULL
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS voice_actor (
va_id INTEGER NOT NULL,
description VARCHAR NOT NULL
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS anime (
anime_id INTEGER NOT NULL,
title VARCHAR NOT NULL
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS character (
char_id INTEGER NOT NULL,
anime_id INTEGER NOT NULL,
name VARCHAR NOT NULL,
age INTEGER,
gender CHARACTER(1),
image VARCHAR,
is_main BOOLEAN DEFAULT FALSE,

FOREIGN KEY (anime_id) REFERENCES anime(anime_id)
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS project (
project_id INTEGER NOT NULL,
anime_id INTEGER NOT NULL,
director_id INTEGER NOT NULL,
release_date DATE NOT NULL,
budget INTEGER,
is_airing BOOLEAN DEFAULT FALSE,
no_episodes INTEGER NOT NULL,
title VARCHAR NOT NULL,
studio VARCHAR NOT NULL,

FOREIGN KEY (anime_id) REFERENCES anime(anime_id),
FOREIGN KEY (director_id) REFERENCES anime(director_id)
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS episode (
number INTEGER NOT NULL,
anime_id INTEGER NOT NULL,
length INTEGER NOT NULL,

FOREIGN KEY (anime_id) REFERENCES anime(anime_id)
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS source (
source_id INTEGER NOT NULL,
anime_id INTEGER,
type VARCHAR NOT NULL,
release_date DATE NOT NULL,
is_releasing BOOLEAN DEFAULT FALSE,

FOREIGN KEY (anime_id) REFERENCES anime(anime_id)
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS song (
song_id INTEGER NOT NULL,
project_id INTEGER NOT NULL,
length INTEGER NOT NULL,
type VARCHAR NOT NULL,
title VARCHAR NOT NULL,

FOREIGN KEY (project_id) REFERENCES project(project_id)
);



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;




CREATE TABLE IF NOT EXISTS written_by (
source_id INTEGER NOT NULL,
author_id INTEGER NOT NULL,

FOREIGN KEY (source_id) REFERENCES source(source_id),
FOREIGN KEY (author_id) REFERENCES author(author_id)
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS sung_by (
song_id INTEGER NOT NULL,
va_id INTEGER NOT NULL,

FOREIGN KEY (song_id) REFERENCES song(song_id),
FOREIGN KEY (va_id) REFERENCES voice_actor(va_id)
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS categorized_in (
anime_id INTEGER NOT NULL,
genre_name VARCHAR NOT NULL,

FOREIGN KEY (genre_name) REFERENCES genre(name),
FOREIGN KEY (anime_id) REFERENCES anime(anime_id)
);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CREATE TABLE IF NOT EXISTS voiced_by (
char_id INTEGER NOT NULL,
va_id INTEGER NOT NULL,

FOREIGN KEY (char_id) REFERENCES character(char_id)
FOREIGN KEY (va_id) REFERENCES voice_actor(va_id)
);
























